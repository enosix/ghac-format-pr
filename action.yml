name: 'Format PR'
description: 'Add formatting rules for PRs in a project'
inputs:
  github_token:
    description: 'GitHub Token'
    required: true
  pr_number:
    description: 'Pull Request Number'
    required: false
  title_format:
    description: 'Title Format Regex'
    required: false
  body_format:
    description: 'Body Format Requirements'
    required: false
  require_description:
    description: 'Require PR Description'
    required: false
    default: 'true'
  min_description_length:
    description: 'Minimum Description Length'
    required: false
    default: '10'
  block_on_fail:
    description: 'Block PR if formatting fails'
    required: false
    default: 'true'
  slack_webhook_url:
    description: 'Slack Webhook URL'
    required: false

outputs:
  valid:
    description: "Whether PR formatting is valid"
    value: ${{ steps.validate.outputs.valid }}

runs:
  using: "composite"
  steps:
    - name: Get PR Details
      id: pr
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const prNumber = ${{ inputs.pr_number }} || context.payload.pull_request.number;
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber
          });
          core.setOutput('title', pr.title);
          core.setOutput('body', pr.body || '');
          core.setOutput('number', prNumber);
    - name: Validate PR Format
      id: validate
      shell: bash
      env:
        PR_TITLE: ${{ steps.pr.outputs.title }}
        PR_BODY: ${{ steps.pr.outputs.body }}
        REQUIRE_DESC: ${{ inputs.require_description }}
        MIN_LENGTH: ${{ inputs.min_description_length }}
        TITLE_FORMAT: ${{ inputs.title_format }}
        BLOCK_ON_FAIL: ${{ inputs.block_on_fail }}
      run: |
        valid=true
        errors=""
        
        # Check title format if provided
        if [ -n "$TITLE_FORMAT" ]; then
          if ! echo "$PR_TITLE" | grep -qE "$TITLE_FORMAT"; then
            valid=false
            errors="${errors}\n- Title does not match required format: $TITLE_FORMAT"
          fi
        fi
        
        # Check if description is required
        if [ "$REQUIRE_DESC" = "true" ]; then
          if [ -z "$PR_BODY" ]; then
            valid=false
            errors="${errors}\n- PR description is required but missing"
          elif [ ${#PR_BODY} -lt $MIN_LENGTH ]; then
            valid=false
            errors="${errors}\n- PR description must be at least $MIN_LENGTH characters (current: ${#PR_BODY})"
          fi
        fi
        
        echo "valid=$valid" >> $GITHUB_OUTPUT
        
        if [ "$valid" = "false" ]; then
          echo "PR formatting validation failed:"
          echo -e "$errors"
          if [ "$BLOCK_ON_FAIL" = "true" ]; then
            exit 1
          fi
        else
          echo "PR formatting validation passed"
        fi
    - name: Add Comment on Failure
      if: failure() && steps.validate.outputs.valid == 'false'
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const prNumber = ${{ steps.pr.outputs.number }};
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: '## PR Formatting Issues\n\nThis PR does not meet the formatting requirements. Please review and update accordingly.'
          });
    - name: Send notification to slack
      if: ${{ failure() && inputs.slack_webhook_url != '' }}
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "channel": "platform-automated",
            "username": "Github Actions",
            "icon_url": "https://avatars.githubusercontent.com/u/9919?s=200&v=4",
            "attachments": {
              "fallback": "${{ github.repository }} PR #${{ steps.pr.outputs.number }} failed formatting check",
              "color": "danger",
              "fields": {
                "title": "PR #${{ steps.pr.outputs.number }} has formatting issues",
                "title_link": "https://github.com/${{ github.repository }}/pull/${{ steps.pr.outputs.number }}",
                "value": "Please check the PR and update the formatting."
              }
            }
          }
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
